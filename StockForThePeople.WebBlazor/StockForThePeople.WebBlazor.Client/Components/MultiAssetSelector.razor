@inject ILogger<MultiAssetSelector> _logger

@if (AssetList is not null)
{
    @if (AssetList.Count == 0)
    {
        <div class="text-warning">No available assets to select from.</div>
    }
    else
    {
        <div class="mb-1">
            Apparently Blazor and Bootstrap do not have a normal looking multiselect widget out of the box.
            So I'll have to work with this for now.
        </div>
        <EditForm EditContext="editContext" 
        OnValidSubmit="HandleInputSelectionChange"
        FormName="AssetSelectorForm"
        multiple
        >
            <div>
                <label>
                    <InputSelect @bind-Value="Model">
                        @foreach(var item in AssetList){
                            <option value="@item.Ticker">@item.Name</option>
                        }
                    </InputSelect>
                </label>
            </div>
            <div>
                <button type="submit">Submit</button>
            </div>
        </EditForm>

        @foreach(var item in Model){
            <p>@item</p>
        }
    }

}
else
{
    <div class="text-warning">There are no available assets to select from. </div>
}

@code {
    [Parameter]
    public EventCallback<string[]> ValueChanged { get; set; }

    [CascadingParameter(Name = "AssetList")]
    public List<AssetGetDtoList> AssetList { get; set; }

    private EditContext? editContext;

    [SupplyParameterFromForm]
    private string[] Model { get; set; } = [];


    protected override void OnInitialized()
    {
        editContext = new(Model);
    }

    private void HandleInputSelectionChange()
    {
        ValueChanged.InvokeAsync(Model);
    }
}
