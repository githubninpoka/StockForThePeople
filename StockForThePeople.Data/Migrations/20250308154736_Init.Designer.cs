// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockForThePeople.Data;

#nullable disable

namespace StockForThePeople.Data.Migrations
{
    [DbContext(typeof(StockForThePeopleSqliteContext))]
    [Migration("20250308154736_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("StockForThePeople.Domain.Models.Asset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .HasColumnType("TEXT");

                    b.Property<string>("Exchange")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c6188c9-399d-491e-a234-64806a82e0f6"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Morningstar Developed Markets Dividend Leaders",
                            Symbol = "TDIV",
                            Ticker = "TDIV.AS",
                            Type = "ETF"
                        },
                        new
                        {
                            Id = new Guid("6886bc8d-0824-4984-95f6-8c6d068b97eb"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Royal Dutch Shell",
                            Symbol = "SHELL",
                            Ticker = "SHELL.AS",
                            Type = "Common stock"
                        },
                        new
                        {
                            Id = new Guid("a77cce6f-c0e7-4959-8ede-44cf1e193a5a"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alfen laadpalen",
                            Symbol = "ALFEN",
                            Ticker = "ALFEN.AS"
                        },
                        new
                        {
                            Id = new Guid("95a75464-45a2-4277-9c17-e64813fbb033"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ING Bank",
                            Symbol = "INGA",
                            Ticker = "INGA.AS"
                        },
                        new
                        {
                            Id = new Guid("4e105535-db12-4395-a9f6-342d3fd477b1"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ahold",
                            Symbol = "AD",
                            Ticker = "AD.AS"
                        },
                        new
                        {
                            Id = new Guid("24da7af9-e7f7-4cbb-b5a7-77127a3c888c"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "KPN",
                            Symbol = "KPN",
                            Ticker = "KPN.AS"
                        },
                        new
                        {
                            Id = new Guid("363d100a-f412-4709-9c44-e60b7617c64e"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pharming",
                            Symbol = "PHARM",
                            Ticker = "PHARM.AS"
                        },
                        new
                        {
                            Id = new Guid("2b4e7c35-069f-46e3-985f-ba02f89a494b"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "F",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Unibail Rodamco",
                            Symbol = "1BR1",
                            Ticker = "1BR1.F"
                        },
                        new
                        {
                            Id = new Guid("53290d2d-d91b-46a7-8917-33f439a0a494"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Unilever",
                            Symbol = "UNA",
                            Ticker = "UNA.AS"
                        },
                        new
                        {
                            Id = new Guid("58d92555-d2d4-483c-975e-87190aba62ec"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "VanEck AEX ETF",
                            Symbol = "TDT",
                            Ticker = "TDT.AS",
                            Type = "ETF"
                        },
                        new
                        {
                            Id = new Guid("1772edb4-5159-44e7-91ca-0d5b56122770"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ASML",
                            Symbol = "ASML",
                            Ticker = "ASML.AS"
                        },
                        new
                        {
                            Id = new Guid("13e35aab-c362-40b2-91d3-300c41508fed"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Nationale Nederlanden",
                            Symbol = "NN",
                            Ticker = "NN.AS"
                        },
                        new
                        {
                            Id = new Guid("6e89c090-a1c4-46db-ae4a-e561b497e90d"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BE Semiconductor Industries NV",
                            Symbol = "BESI",
                            Ticker = "BESI.AS"
                        },
                        new
                        {
                            Id = new Guid("0d32dbbf-39f1-4e2a-8c0f-f74129985dfb"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "EUR",
                            Exchange = "AS",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ABN",
                            Symbol = "ABN",
                            Ticker = "ABN.AS"
                        },
                        new
                        {
                            Id = new Guid("8b02aae5-8a1a-483a-af0f-e89c43df22b1"),
                            CreatedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = "DOLLAR",
                            Exchange = "US",
                            ModifiedAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "DSM",
                            Symbol = "DSMFF",
                            Ticker = "DSMFF.US"
                        });
                });

            modelBuilder.Entity("StockForThePeople.Domain.Models.MarketData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Close")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("High")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Low")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Open")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT");

                    b.Property<int>("Volume")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("MarketData");
                });

            modelBuilder.Entity("StockForThePeople.Domain.Models.UserTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AssetId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TransactionMoment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.Property<int>("Units")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.ToTable("UserTransactions");
                });

            modelBuilder.Entity("StockForThePeople.Domain.Models.MarketData", b =>
                {
                    b.HasOne("StockForThePeople.Domain.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });

            modelBuilder.Entity("StockForThePeople.Domain.Models.UserTransaction", b =>
                {
                    b.HasOne("StockForThePeople.Domain.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");
                });
#pragma warning restore 612, 618
        }
    }
}
